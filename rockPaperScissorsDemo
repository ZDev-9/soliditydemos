// SPDX-License-Identifier: MIT

pragma solidity >=0.7.0 <0.9.0;

contract rockPaperScissors {

    uint[] choices = [0, 1, 2];
    //0 = Rock
    //1 = Paper
    //2 = Scissors

    uint playerChoice;
    uint computerChoice;

    function ComputerPick() private {
        computerChoice = uint(keccak256(abi.encodePacked(block.timestamp, block.difficulty, msg.sender))) % 3;
    }

    function pickRock() public returns(string memory){
        ComputerPick();
        playerChoice = 0;
        return compareChoices(playerChoice, computerChoice);
    }

    function pickPaper() public returns(string memory){
        ComputerPick();
        playerChoice = 1;
        return compareChoices(playerChoice, computerChoice);
    }

    function pickScissors() public returns(string memory){
        ComputerPick();
        playerChoice = 2;
        return compareChoices(playerChoice, computerChoice);
    }


    function compareChoices(uint player, uint computer) private pure returns(string memory){
        if(player == computer){
            return "It was a draw";
        } else if(player == 0 && computer == 2){
            return "You win, rock beats scisors";
        } else if(player == 1 &&  computer == 0){
            return "You win, Paper beats rock";
        } else if (player ==2 && computer == 1 ){
            return "You win, Scissors beats paper";
        } else {
            return "Sorry, you lose";
        }
    }
}
